# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    platform: 'x86'
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)' # Update this to match your need
- task: DotNetCoreCLI@2
  displayName: 'dotnet-test'
  inputs:
    command: 'test'
    arguments: '--configuration $(BuildConfiguration) --collect "Xplat Code coverage" --RunConfigurtion.DisableAppDomain=true'

- script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8'  
  displayName: 'Install ReportGenerator tool' 

- script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'  
  displayName: 'Create reports'

- task: PublishCodeCoverageResults@1  
  displayName: 'Publish code coverage'  
  inputs:  
    codeCoverageTool: Cobertura  
    summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'   